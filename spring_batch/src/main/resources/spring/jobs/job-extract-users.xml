<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!--<import resource="/spring/batch/config/context.xml"/>-->
    <!--<import resource="/spring/batch/config/database.xml"/>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/tutorialSpringBatch"/>
        <property name="username" value="postgres"/>
        <property name="password" value="postgres"/>
    </bean>

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:org/springframework/batch/core/schema-drop-postgresql.sql" />
        <jdbc:script location="classpath:org/springframework/batch/core/schema-postgresql.sql" />
    </jdbc:initialize-database>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="databaseType" value="postgres"/>
    </bean>

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>

    <bean id="accountRepository" class="br.com.spring_batch.repositories.AccountRepository">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="jdbcTemplate"/>
    </bean>
    <bean id="accountService" class="br.com.spring_batch.services.AccountService">
        <constructor-arg ref="accountRepository"/>
    </bean>

    <!--READER-->
    <bean id="itemReaderListener" class="job.readers.listeners.AccountReaderListener" />
    <bean id="itemReader" class="job.readers.AccountRepositoryItemReader" scope="step">
        <property name="accountService" ref="accountService"/>
    </bean>

    <!--PROCESSOR-->
    <bean id="itemProcessorListener" class="job.processors.listeners.AccountProcessorListener"/>
    <bean id="itemProcessor" class="job.processors.AccountProcessor">
        <property name="accountRepository" ref="accountRepository"/>
    </bean>


    <bean id="xugusRepository" class="br.com.spring_batch.repositories.XugusRepository">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="jdbcTemplate"/>
    </bean>

    <!--WRITER-->
    <bean id="itemWriterListener" class="job.writers.listeners.XugusWriterListener"/>
    <bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" >
        <property name="resource" value="file:csv/report.csv"/>
        <property name="shouldDeleteIfExists" value="true" />

        <property name="lineAggregator" >
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=","/>
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="xugus_id, person_id, nome"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--JOB-->
    <batch:job id="testJob" job-repository="jobRepository">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="itemReader"  processor="itemProcessor" writer="itemWriter" commit-interval="10"/>
                <batch:listeners>
                    <batch:listener ref="itemReaderListener"/>
                    <batch:listener ref="itemProcessorListener"/>
                    <batch:listener ref="itemWriterListener"/>
                </batch:listeners>
            </batch:tasklet>
        </batch:step>
    </batch:job>

</beans>